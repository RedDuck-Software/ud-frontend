/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CryptoBuggy, CryptoBuggyInterface } from "../CryptoBuggy";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_partialNft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_buggyToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_signature",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "addFund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_signature",
        type: "string",
      },
    ],
    name: "addFundPartially",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "boughtBuggy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buggyNFT",
    outputs: [
      {
        internalType: "contract BuggyNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buggyToken",
    outputs: [
      {
        internalType: "contract BuggyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "partialBuggyNFT",
    outputs: [
      {
        internalType: "contract PartialBuggyNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniqUsers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c28380380610c2883398101604081905261002f916100ea565b6100383361007e565b600193909355600580546001600160a01b03199081166001600160a01b039485161790915560068054821694841694909417909355600780549093169116179055610137565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e557600080fd5b919050565b6000806000806080858703121561010057600080fd5b84519350610110602086016100ce565b925061011e604086016100ce565b915061012c606086016100ce565b905092959194509250565b610ae2806101466000396000f3fe6080604052600436106100dc5760003560e01c80638da5cb5b1161007f578063a87430ba11610059578063a87430ba14610216578063f0ea4bfc14610243578063f2fde38b14610259578063fe5a7a111461027957600080fd5b80638da5cb5b146101cf578063925b7cb6146101ed578063a035b1fe1461020057600080fd5b806344761aa9116100bb57806344761aa9146101585780634fe3ce6a1461017857806351cff8d914610198578063715018a6146101ba57600080fd5b806279305a146100e157806305a9aeca1461010a5780630b29f7fd14610142575b600080fd5b3480156100ed57600080fd5b506100f760045481565b6040519081526020015b60405180910390f35b34801561011657600080fd5b5060055461012a906001600160a01b031681565b6040516001600160a01b039091168152602001610101565b34801561014e57600080fd5b506100f760035481565b34801561016457600080fd5b5060065461012a906001600160a01b031681565b34801561018457600080fd5b5060075461012a906001600160a01b031681565b3480156101a457600080fd5b506101b86101b3366004610834565b61028c565b005b3480156101c657600080fd5b506101b86102cd565b3480156101db57600080fd5b506000546001600160a01b031661012a565b6101b86101fb366004610907565b6102e1565b34801561020c57600080fd5b506100f760015481565b34801561022257600080fd5b506100f7610231366004610834565b60026020526000908152604090205481565b34801561024f57600080fd5b506100f760085481565b34801561026557600080fd5b506101b8610274366004610834565b610516565b6101b861028736600461094c565b61058f565b61029461078a565b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156102c9573d6000803e3d6000fd5b5050565b6102d561078a565b6102df60006107e4565b565b6000816001546102f1919061099f565b90508034146103525760405162461bcd60e51b815260206004820152602260248201527f4e6f7420656e6f7567682066756e647320746f2063726561746520746865204e604482015261119560f21b60648201526084015b60405180910390fd5b81600114156103c457600554604051633d02d0c960e01b81526001600160a01b0390911690633d02d0c99061038d9033908790600401610a0b565b600060405180830381600087803b1580156103a757600080fd5b505af11580156103bb573d6000803e3d6000fd5b50505050610448565b60005b8281101561044657600554604051633d02d0c960e01b81526001600160a01b0390911690633d02d0c9906104019033908890600401610a0b565b600060405180830381600087803b15801561041b57600080fd5b505af115801561042f573d6000803e3d6000fd5b50505050808061043e90610a2f565b9150506103c7565b505b816004600082825461045a9190610a4a565b909155505033600090815260026020526040902054610489576003805490600061048383610a2f565b91905055505b33600090815260026020526040812080548492906104a8908490610a4a565b9091555050600654604051630f38ca0d60e31b8152336004820152602481018390526001600160a01b03909116906379c6506890604401600060405180830381600087803b1580156104f957600080fd5b505af115801561050d573d6000803e3d6000fd5b50505050505050565b61051e61078a565b6001600160a01b0381166105835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610349565b61058c816107e4565b50565b600754604080516305f5c3df60e21b815290516000926001600160a01b0316916317d70f7c916004808301926020929190829003018186803b1580156105d457600080fd5b505afa1580156105e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190610a62565b610617906001610a4a565b6007546040516337b8dd1560e21b81529192506001600160a01b03169063dee374549061064c90849086903390600401610a7b565b600060405180830381600087803b15801561066657600080fd5b505af115801561067a573d6000803e3d6000fd5b5050505034600860008282546106909190610a4a565b90915550506001546008541061070e57600760009054906101000a90046001600160a01b03166001600160a01b0316632004ffd96040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106f057600080fd5b505af1158015610704573d6000803e3d6000fd5b5050600060085550505b6003805490600061071e83610a2f565b9091555050600654604051630f38ca0d60e31b81523360048201523460248201526001600160a01b03909116906379c6506890604401600060405180830381600087803b15801561076e57600080fd5b505af1158015610782573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146102df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610349565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561084657600080fd5b81356001600160a01b038116811461085d57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261088b57600080fd5b813567ffffffffffffffff808211156108a6576108a6610864565b604051601f8301601f19908116603f011681019082821181831017156108ce576108ce610864565b816040528381528660208588010111156108e757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561091a57600080fd5b823567ffffffffffffffff81111561093157600080fd5b61093d8582860161087a565b95602094909401359450505050565b60006020828403121561095e57600080fd5b813567ffffffffffffffff81111561097557600080fd5b6109818482850161087a565b949350505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156109b9576109b9610989565b500290565b6000815180845260005b818110156109e4576020818501810151868301820152016109c8565b818111156109f6576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090610981908301846109be565b6000600019821415610a4357610a43610989565b5060010190565b60008219821115610a5d57610a5d610989565b500190565b600060208284031215610a7457600080fd5b5051919050565b838152606060208201526000610a9460608301856109be565b905060018060a01b038316604083015294935050505056fea26469706673582212209847d7ad0c97102acd376a3ab1a19156939ca4b4c6c16b9379d7f656551a6cc764736f6c63430008090033";

type CryptoBuggyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoBuggyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoBuggy__factory extends ContractFactory {
  constructor(...args: CryptoBuggyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _price: PromiseOrValue<BigNumberish>,
    _nft: PromiseOrValue<string>,
    _partialNft: PromiseOrValue<string>,
    _buggyToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CryptoBuggy> {
    return super.deploy(
      _price,
      _nft,
      _partialNft,
      _buggyToken,
      overrides || {}
    ) as Promise<CryptoBuggy>;
  }
  override getDeployTransaction(
    _price: PromiseOrValue<BigNumberish>,
    _nft: PromiseOrValue<string>,
    _partialNft: PromiseOrValue<string>,
    _buggyToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _price,
      _nft,
      _partialNft,
      _buggyToken,
      overrides || {}
    );
  }
  override attach(address: string): CryptoBuggy {
    return super.attach(address) as CryptoBuggy;
  }
  override connect(signer: Signer): CryptoBuggy__factory {
    return super.connect(signer) as CryptoBuggy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoBuggyInterface {
    return new utils.Interface(_abi) as CryptoBuggyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptoBuggy {
    return new Contract(address, _abi, signerOrProvider) as CryptoBuggy;
  }
}
